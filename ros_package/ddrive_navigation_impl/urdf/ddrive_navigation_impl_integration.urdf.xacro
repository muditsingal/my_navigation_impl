<?xml version="1.0"?>
<!-- Name your robot here -->
<robot name ="" xmlns:xacro="http://wiki.ros.org/xacro">

<!-- Include your urdf files here -->
	<!-- Include Robot's urdf filepath -->
	<!-- Include Lidar's urdf filepath -->
	<xacro:include filename="$(find ddrive_navigation_impl)/urdf/ddrive_navigation_impl.urdf"/>
	<xacro:include filename="$(find ddrive_navigation_impl)/urdf/ydlidar.urdf"/>

	<joint name="base_to_lidar" type="fixed">
		<parent link="base_link" />
		<child link="base_laser" />
		<origin xyz="0.02 0 0.06" rpy="0 0 0" />
		<axis xyz="0 0 1" />
	</joint>
	
	<gazebo reference="base_link">
		<mu1>0.001</mu1>
		<mu2>0.001</mu2>
		<selfCollide>true</selfCollide>
	</gazebo>
	
	<gazebo reference="left_wheel">
		<mu1>20.0</mu1>
		<mu2>20.0</mu2>
		<selfCollide>true</selfCollide>
	</gazebo>
	
	<gazebo reference="right_wheel">
		<mu1>20.0</mu1>
		<mu2>20.0</mu2>
		<selfCollide>true</selfCollide>
	</gazebo>

<!-- Add your gazebo sensors here -->
	<gazebo reference="base_laser">
		<sensor name="laser" type="ray"> 
			<!-- Add in your sensor characteristics -->
			<pose> 0 0 0.06 0 0 0 </pose>
			<visualise>true</visualise>
			<update_rate>20</update_rate>
			<ray>
				<scan>
					<horizontal>
						<samples>720</samples>
						<resolution>1</resolution>
						<min_angle>-3.141592</min_angle>
              					<max_angle>3.141592</max_angle>
              				</horizontal>
              			</scan>
			      	<range>
			      		<min>0.20</min>
			      		<max>10.0</max>
			      		<resolution>0.01</resolution>
			      	</range>
			      	<noise>
			      		<type>gaussian</type>
			      		<mean>0.0</mean>
			      		<stddev>0.01</stddev>
			      	</noise>
            		</ray>
			<plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
				<!-- Use topic name as /my_robot/scan -->
					<topicName>/laser/scan</topicName> 
					<frameName>base_laser</frameName>
			</plugin>
		</sensor>
	</gazebo>
	
	<gazebo>
		<plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">

			<!-- Plugin update rate in Hz -->
			<updateRate>30</updateRate>

			<!-- Name of left joint, defaults to `left_joint` -->
			<leftJoint>left_joint</leftJoint>

			<!-- Name of right joint, defaults to `right_joint` -->
			<rightJoint>right_joint</rightJoint>

			<!-- The distance from the center of one wheel to the other, in meters, defaults to 0.34 m -->
			<wheelSeparation>0.190</wheelSeparation>

			<!-- Diameter of the wheels, in meters, defaults to 0.15 m -->
			<wheelDiameter>0.065</wheelDiameter>

			<!-- Wheel acceleration, in rad/s^2, defaults to 0.0 rad/s^2 -->
			<wheelAcceleration>1.0</wheelAcceleration>

			<!-- Maximum torque which the wheels can produce, in Nm, defaults to 5 Nm -->
			<wheelTorque>20</wheelTorque>

			<!-- Topic to receive geometry_msgs/Twist message commands, defaults to `cmd_vel` -->
			<commandTopic>cmd_vel</commandTopic>

			<!-- Topic to publish nav_msgs/Odometry messages, defaults to `odom` -->
			<odometryTopic>odom</odometryTopic>

			<!-- Odometry frame, defaults to `odom` -->
			<odometryFrame>odom</odometryFrame>

			<!-- Robot frame to calculate odometry from, defaults to `base_footprint` -->
			<robotBaseFrame>base_link</robotBaseFrame>

			<!-- Odometry source, 0 for ENCODER, 1 for WORLD, defaults to WORLD -->
			<odometrySource>1</odometrySource>

			<!-- Set to true to publish transforms for the wheel links, defaults to false -->
			<publishWheelTF>false</publishWheelTF>

			<!-- Set to true to publish transforms for the odometry, defaults to true -->
			<publishOdom>true</publishOdom>

			<!-- Set to true to publish sensor_msgs/JointState on /joint_states for the wheel joints, defaults to false -->
			<publishWheelJointState>true</publishWheelJointState>

			<!-- Set to true to swap right and left wheels, defaults to true -->
			<legacyMode>false</legacyMode>
			
		</plugin>
	</gazebo>
	
</robot>	

